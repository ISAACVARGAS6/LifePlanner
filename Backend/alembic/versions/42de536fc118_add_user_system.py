"""add_user_system

Revision ID: 42de536fc118
Revises: 47f23228513e
Create Date: 2025-09-25 17:19:53.275834

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42de536fc118'
down_revision: Union[str, None] = '47f23228513e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('device_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_device_id'), 'users', ['device_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    
    # Crear un usuario por defecto para los datos existentes
    op.execute("INSERT INTO users (id, username, device_id, created_at, updated_at) VALUES (1, 'default_user', 'default_device', datetime('now'), datetime('now'))")
    
    # Agregar la columna user_id como nullable primero
    op.add_column('projects', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # Actualizar todos los proyectos existentes para que pertenezcan al usuario por defecto
    op.execute("UPDATE projects SET user_id = 1 WHERE user_id IS NULL")
    
    # Ahora hacer la columna NOT NULL
    op.alter_column('projects', 'user_id', nullable=False)
    
    op.create_foreign_key(None, 'projects', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_column('projects', 'user_id')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_device_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
